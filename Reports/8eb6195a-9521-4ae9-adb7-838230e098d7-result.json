{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: MicrosoftEdge=138.0.3351.121)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7ccd382b5+23461]\n\t(No symbol) [0x0x7ff7ccc8c3a0]\n\tGetHandleVerifier [0x0x7ff7ccfb01e8+2611928]\n\t(No symbol) [0x0x7ff7cca5a250]\n\t(No symbol) [0x0x7ff7cca4e4ff]\n\t(No symbol) [0x0x7ff7cca4fb66]\n\t(No symbol) [0x0x7ff7cca4e769]\n\t(No symbol) [0x0x7ff7cca4e36c]\n\t(No symbol) [0x0x7ff7cca4e0b8]\n\t(No symbol) [0x0x7ff7cca4c0b9]\n\t(No symbol) [0x0x7ff7cca4c68c]\n\t(No symbol) [0x0x7ff7cca6057a]\n\t(No symbol) [0x0x7ff7ccae7ade]\n\t(No symbol) [0x0x7ff7ccaca6ba]\n\t(No symbol) [0x0x7ff7cca9f58d]\n\t(No symbol) [0x0x7ff7ccae754f]\n\t(No symbol) [0x0x7ff7ccaca423]\n\t(No symbol) [0x0x7ff7cca9ea86]\n\t(No symbol) [0x0x7ff7cca9dd11]\n\t(No symbol) [0x0x7ff7cca9e8b3]\n\t(No symbol) [0x0x7ff7ccb9dd3d]\n\t(No symbol) [0x0x7ff7ccbab0c8]\n\tGetHandleVerifier [0x0x7ff7cce180fb+940523]\n\tGetHandleVerifier [0x0x7ff7cce20e51+976705]\n\t(No symbol) [0x0x7ff7ccc99f91]\n\t(No symbol) [0x0x7ff7ccc92974]\n\t(No symbol) [0x0x7ff7ccc92ac3]\n\t(No symbol) [0x0x7ff7ccc84566]\n\tBaseThreadInitThunk [0x0x7ffaff35259d+29]\n\tRtlUserThreadStart [0x0x7ffaff66af78+40]", "trace": "request = <SubRequest 'setup_teardown' for <Function test_login>>\n\n    @pytest.fixture()\n    def setup_teardown(request):\n        browser1 = ReadConfigurations.read_configuration(\"INFO\", \"browser\")\n        # driver = None\n        if str.lower(browser1) == str.lower(\"chrome\"):\n            driver = webdriver.Chrome()\n        elif str.lower(browser1) == str.lower(\"edge\"):\n            driver = webdriver.Edge()\n        elif str.lower(browser1) == str.lower(\"firefox\"):\n            driver = webdriver.Firefox()\n        else:\n            print(\"provide driver from Chrome/Edge/Firefox : running default in Edge\")\n            driver = webdriver.Edge()\n        driver.maximize_window()\n>       driver.get(ReadConfigurations.read_configuration(\"INFO\", \"link\"))\n\nCases\\conftest.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Mahesh.Shendge\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:389: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\Mahesh.Shendge\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002B02AC08110>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...[0x0x7ff7ccc84566]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffaff35259d+29]\\\\n\\\\tRtlUserThreadStart [0x0x7ffaff66af78+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: MicrosoftEdge=138.0.3351.121)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7ccd382b5+23461]\nE       \t(No symbol) [0x0x7ff7ccc8c3a0]\nE       \tGetHandleVerifier [0x0x7ff7ccfb01e8+2611928]\nE       \t(No symbol) [0x0x7ff7cca5a250]\nE       \t(No symbol) [0x0x7ff7cca4e4ff]\nE       \t(No symbol) [0x0x7ff7cca4fb66]\nE       \t(No symbol) [0x0x7ff7cca4e769]\nE       \t(No symbol) [0x0x7ff7cca4e36c]\nE       \t(No symbol) [0x0x7ff7cca4e0b8]\nE       \t(No symbol) [0x0x7ff7cca4c0b9]\nE       \t(No symbol) [0x0x7ff7cca4c68c]\nE       \t(No symbol) [0x0x7ff7cca6057a]\nE       \t(No symbol) [0x0x7ff7ccae7ade]\nE       \t(No symbol) [0x0x7ff7ccaca6ba]\nE       \t(No symbol) [0x0x7ff7cca9f58d]\nE       \t(No symbol) [0x0x7ff7ccae754f]\nE       \t(No symbol) [0x0x7ff7ccaca423]\nE       \t(No symbol) [0x0x7ff7cca9ea86]\nE       \t(No symbol) [0x0x7ff7cca9dd11]\nE       \t(No symbol) [0x0x7ff7cca9e8b3]\nE       \t(No symbol) [0x0x7ff7ccb9dd3d]\nE       \t(No symbol) [0x0x7ff7ccbab0c8]\nE       \tGetHandleVerifier [0x0x7ff7cce180fb+940523]\nE       \tGetHandleVerifier [0x0x7ff7cce20e51+976705]\nE       \t(No symbol) [0x0x7ff7ccc99f91]\nE       \t(No symbol) [0x0x7ff7ccc92974]\nE       \t(No symbol) [0x0x7ff7ccc92ac3]\nE       \t(No symbol) [0x0x7ff7ccc84566]\nE       \tBaseThreadInitThunk [0x0x7ffaff35259d+29]\nE       \tRtlUserThreadStart [0x0x7ffaff66af78+40]\n\nC:\\Users\\Mahesh.Shendge\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "log", "source": "fa1a5685-fe15-4804-a786-293981b3c06b-attachment.txt", "type": "text/plain"}], "start": 1754230790994, "stop": 1754230790994, "uuid": "e11541bc-b9bc-4ec2-93b0-d402d663f4ec", "historyId": "fb03a4871d14de0d852893da4ca6b12e", "testCaseId": "fb03a4871d14de0d852893da4ca6b12e", "fullName": "Cases.test_textbox.TestLogin#test_login", "labels": [{"name": "parentSuite", "value": "Cases"}, {"name": "suite", "value": "test_textbox"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "NP-S-MAHESH1"}, {"name": "thread", "value": "49616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Cases.test_textbox"}]}